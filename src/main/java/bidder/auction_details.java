/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bidder;


import home.panel_Bidder;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.PublicKey;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.sql.rowset.serial.SerialBlob;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import login_register.DBconnection;
import login_register.login_Bidder;
import validation.bid_validation;

import validation.RSA;
import validation.auction_validate;

/**
 *
 * @author user
 */
public class auction_details extends JFrame implements ActionListener{

    public static int bidprice_keyedIn;
    public static int floorprice;
    public static int auctionID;
    public static String biddername;
    public static int bidderID;
    private static PublicKey pk;
    private static byte[] sealed_bid, pk_bytes;
    private String bidderName;
    
    public auction_details() {
        initComponents();
        this.setLocationRelativeTo(null); // center form in screen
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        go_to_view_auction_list = new javax.swing.JButton();
        place_bid = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        bid_price = new javax.swing.JTextField();
        show_product_name = new javax.swing.JTextField();
        show_product_desc = new javax.swing.JTextField();
        show_floor_price = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        show_auctionID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        close = new javax.swing.JButton();
        show_username = new javax.swing.JLabel("username",SwingConstants.RIGHT);
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(910, 530));
        setMinimumSize(new java.awt.Dimension(910, 530));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(910, 530));

        jPanel2.setBackground(new java.awt.Color(240, 240, 175));
        jPanel2.setPreferredSize(new java.awt.Dimension(910, 530));
        jPanel2.setLayout(null);

        go_to_view_auction_list.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancel2 button.png"))); // NOI18N
        go_to_view_auction_list.setBorderPainted(false);
        go_to_view_auction_list.setContentAreaFilled(false);
        go_to_view_auction_list.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        go_to_view_auction_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                go_to_view_auction_listActionPerformed(evt);
            }
        });
        jPanel2.add(go_to_view_auction_list);
        go_to_view_auction_list.setBounds(250, 445, 130, 50);

        place_bid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/place-bid button.png"))); // NOI18N
        place_bid.setBorderPainted(false);
        place_bid.setContentAreaFilled(false);
        place_bid.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        place_bid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                place_bidActionPerformed(evt);
            }
        });
        jPanel2.add(place_bid);
        place_bid.setBounds(540, 445, 130, 50);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        bid_price.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        bid_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bid_priceKeyTyped(evt);
            }
        });

        show_product_name.setEditable(false);
        show_product_name.setBackground(new java.awt.Color(203, 240, 237));
        show_product_name.setToolTipText("");
        show_product_name.setBorder(null);

        show_product_desc.setEditable(false);
        show_product_desc.setBackground(new java.awt.Color(203, 240, 237));
        show_product_desc.setBorder(null);

        show_floor_price.setEditable(false);
        show_floor_price.setBackground(new java.awt.Color(203, 240, 237));
        show_floor_price.setBorder(null);

        jLabel11.setFont(new java.awt.Font("Lato Heavy", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("Product Name: ");

        jLabel3.setFont(new java.awt.Font("Lato Heavy", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Your Bid Price:      RM");

        jLabel13.setFont(new java.awt.Font("Lato Heavy", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 102, 102));
        jLabel13.setText("Floor Price:      RM");

        jLabel14.setFont(new java.awt.Font("Lato Heavy", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 102, 102));
        jLabel14.setText("Description:");

        jLabel15.setFont(new java.awt.Font("Lato Heavy", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 102, 102));
        jLabel15.setText("Auction ID:");

        jLabel16.setFont(new java.awt.Font("Lato Heavy", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 102, 102));
        jLabel16.setText("Product");

        jLabel17.setFont(new java.awt.Font("Lato Heavy", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 102, 102));
        jLabel17.setText("Auction ID:");

        show_auctionID.setEditable(false);
        show_auctionID.setBackground(new java.awt.Color(203, 240, 237));
        show_auctionID.setBorder(null);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(show_auctionID, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(show_product_name, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(20, 20, 20)
                        .addComponent(show_product_desc, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(show_floor_price, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(bid_price, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(show_auctionID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(show_product_name, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel14))
                    .addComponent(show_product_desc, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(show_floor_price, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bid_price, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.add(jPanel3);
        jPanel3.setBounds(125, 90, 660, 330);

        jLabel7.setFont(new java.awt.Font("Lato Black", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Bidder Panel - Join Auction");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(70, 10, 460, 60);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/small logo.png"))); // NOI18N
        jPanel2.add(jLabel10);
        jLabel10.setBounds(20, 10, 50, 60);

        close.setFont(new java.awt.Font("Lato Black", 0, 36)); // NOI18N
        close.setForeground(new java.awt.Color(255, 255, 255));
        close.setText("x");
        close.setBorderPainted(false);
        close.setContentAreaFilled(false);
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        jPanel2.add(close);
        close.setBounds(860, 0, 53, 40);

        show_username.setFont(new java.awt.Font("Lato", 1, 14)); // NOI18N
        show_username.setForeground(new java.awt.Color(255, 255, 255));
        show_username.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(show_username);
        show_username.setBounds(700, 10, 150, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view-list-bg.png"))); // NOI18N
        jPanel2.add(jLabel1);
        jLabel1.setBounds(0, 0, 910, 530);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void go_to_view_auction_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_go_to_view_auction_listActionPerformed
        view_auction_list val = new view_auction_list();
        val.setVisible(true);
        val.pack();
        val.setLocationRelativeTo(null);
        bidderName = login_Bidder.username;
        val.show_username.setText("User:  " + bidderName);
        val.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_go_to_view_auction_listActionPerformed

    private void place_bidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_place_bidActionPerformed
       try {
            floorprice = view_auction_list.floorprice;
            auctionID = view_auction_list.auctionID_keyedIn;
            bidprice_keyedIn = Integer.parseInt(bid_price.getText());
            biddername = login_Bidder.username;
           
            auction_validate av = new auction_validate();
            av.update_auction_status();
            av.check_and_update_auctioneer_eligibility();
            int auction_status = av.get_auction_status(auctionID);
            
            //arr = new ArrayList<>();
            // check auctionID that haven't determine winner
            int[] pending_aucID = av.check_pending_closedAuction();
            
            // if have pending_auctionID
            if(pending_aucID != null){
                av.bid_opening(pending_aucID);     
            }
            else{
                /* Ignored */
            }

            Connection con = DBconnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            String query = "SELECT `bidderID` FROM `bidder` WHERE bidder_name=?";
             try {
                 ps = con.prepareStatement(query);
                 ps.setString(1, biddername);
                 rs = ps.executeQuery();

                 while(rs.next()){
                     bidderID = rs.getInt("bidderID");
                 }

             } catch (SQLException ex) {
                 Logger.getLogger(auction_details.class.getName()).log(Level.SEVERE, null, ex);
             } 

            int a = bid_validation.check_bid_count(bidderID, auctionID);
            boolean validity_for_placing = bid_validation.check_eligibility_place_bid(a);


            if(bidprice_keyedIn < floorprice){
                JOptionPane.showMessageDialog(null, "Please place a bid that is higher than floor price", "Warning", JOptionPane.ERROR_MESSAGE);
            }
            else if(validity_for_placing == false){
                JOptionPane.showMessageDialog(null, "You have placed a bid for this auction already", "Warning", JOptionPane.ERROR_MESSAGE);
            }
            else if((bidprice_keyedIn >= floorprice) && (validity_for_placing == true) && (auction_status == 1)){

                 try {
                    //retrieve auctioneer's pk
                    PreparedStatement ps3;
                    ResultSet rs3;
                    String qr3 = "SELECT `pk` FROM `auctioneer` WHERE `auctioneerID`=(SELECT `auctioneerID` FROM `auction` WHERE `auctionID`=?);";

                    ps3 = con.prepareStatement(qr3);
                    ps3.setInt(1, auctionID);
                    rs3 = ps3.executeQuery();

                    while(rs3.next()){
                        pk_bytes = rs3.getBytes("pk");
                    }

                    pk = RSA.convertBytesToPK(pk_bytes);
                    String str_bid = Integer.toString(bidprice_keyedIn);
                    sealed_bid = RSA.encrypt(str_bid, pk);

                } catch (Exception ex) {
                    Logger.getLogger(auction_details.class.getName()).log(Level.SEVERE, null, ex);
                } 

                PreparedStatement ps1, ps2;
                ResultSet rs2;
                String find_bidderID = "SELECT `bidderID` FROM `bidder` WHERE `bidder_name`=?";
                String query2 = "INSERT INTO `bid`(`token`,`placing_time`,`bidderID`,`auctionID`)" 
                                  + "VALUES (?,?,?,?)" ;

                try {
                    ps1 = con.prepareStatement(find_bidderID);
                    ps1.setString(1, biddername);
                    rs2 = ps1.executeQuery();

                    if(rs2.next()){
                        bidderID = rs2.getInt("bidderID");
                        ps2 = con.prepareStatement(query2);
                        ps2.setBytes(1, sealed_bid);

                        java.util.Date date = new java.util.Date();
                        Timestamp placingtime = new Timestamp(date.getTime());
                        ps2.setTimestamp(2, placingtime);
                        ps2.setInt(3, bidderID);
                        ps2.setInt(4, auctionID);

                        if(ps2.executeUpdate() > 0){
                             JOptionPane.showMessageDialog(null, "You have successfully placed a bid");
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Something is wrong");
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Something is wrong", "Error", JOptionPane.ERROR_MESSAGE);
                    }



                } catch (SQLException ex) {
                    Logger.getLogger(auction_details.class.getName()).log(Level.SEVERE, null, ex);
                } finally{
                     if(con != null){
                         try{
                             con.close();
                         } catch (SQLException e){
                             /* Ignored */
                         }
                     }
                 }
            }
            else{
                JOptionPane.showMessageDialog(null, "Time Out. Auction has been closed!\n Please choose other auctions.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IllegalBlockSizeException | BadPaddingException ex) {
            Logger.getLogger(panel_Bidder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_place_bidActionPerformed

    private void bid_priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bid_priceKeyTyped
        // make sure only integer can be keyed in
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_bid_priceKeyTyped

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        //close the jframe
        System.exit(0);
    }//GEN-LAST:event_closeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new auction_details().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bid_price;
    private javax.swing.JButton close;
    private javax.swing.JButton go_to_view_auction_list;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton place_bid;
    public javax.swing.JTextField show_auctionID;
    public javax.swing.JTextField show_floor_price;
    public javax.swing.JTextField show_product_desc;
    public javax.swing.JTextField show_product_name;
    public javax.swing.JLabel show_username;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

 
}
